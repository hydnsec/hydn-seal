/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type { PromiseOrValue } from "../../common";
import type { HYDNSeal, HYDNSealInterface } from "../../contracts/HYDNSeal";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentAuditId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_contracts",
        type: "address[]",
      },
    ],
    name: "mintSeal",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e8565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e6576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051612b99620001206000396000818161080c015281816108a201528181610b1b01528181610bb10152610ce00152612b996000f3fe6080604052600436106101745760003560e01c8063715018a6116100cb578063bd85b0391161007f578063f2fde38b11610059578063f2fde38b14610434578063f62d188814610454578063f722c17d1461047457600080fd5b8063bd85b03914610390578063e985e9c5146103be578063f242432a1461041457600080fd5b80639458e718116100b05780639458e7181461034457806395d89b411461035b578063a22cb4651461037057600080fd5b8063715018a6146102fa5780638da5cb5b1461030f57600080fd5b80632eb2c2d61161012d5780634f1ef286116101075780634f1ef286146102a25780634f558e79146102b557806352d1902d146102e557600080fd5b80632eb2c2d6146102335780633659cfe6146102555780634e1273f41461027557600080fd5b806306fdde031161015e57806306fdde03146101dc5780630e89341c146101fe57806318160ddd1461021e57600080fd5b8062fdd58e1461017957806301ffc9a7146101ac575b600080fd5b34801561018557600080fd5b506101996101943660046120d3565b610494565b6040519081526020015b60405180910390f35b3480156101b857600080fd5b506101cc6101c73660046120fe565b61055c565b60405190151581526020016101a3565b3480156101e857600080fd5b506101f161063f565b6040516101a39190612166565b34801561020a57600080fd5b506101f16102193660046121b7565b6106ce565b34801561022a57600080fd5b50610199610766565b34801561023f57600080fd5b5061025361024e366004612395565b610788565b005b34801561026157600080fd5b5061025361027036600461244f565b6107f5565b34801561028157600080fd5b5061029561029036600461246b565b6109c6565b6040516101a3919061253c565b6102536102b036600461257f565b610b04565b3480156102c157600080fd5b506101cc6102d03660046121b7565b600090815261012d6020526040902054151590565b3480156102f157600080fd5b50610199610cc6565b34801561030657600080fd5b50610253610d98565b34801561031b57600080fd5b5060975460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a3565b34801561035057600080fd5b506101996101615481565b34801561036757600080fd5b506101f1610dac565b34801561037c57600080fd5b5061025361038b3660046125c6565b610dba565b34801561039c57600080fd5b506101996103ab3660046121b7565b600090815261012d602052604090205490565b3480156103ca57600080fd5b506101cc6103d9366004612605565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260fc6020908152604080832093909416825291909152205460ff1690565b34801561042057600080fd5b5061025361042f36600461263a565b610dc5565b34801561044057600080fd5b5061025361044f36600461244f565b610e0d565b34801561046057600080fd5b5061025361046f366004612697565b610ea7565b34801561048057600080fd5b506101cc61048f366004612751565b6110d7565b600073ffffffffffffffffffffffffffffffffffffffff83166105245760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b50600081815260fb6020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806105ef57507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061055657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610556565b61015f805461064d906127ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610679906127ca565b80156106c65780601f1061069b576101008083540402835291602001916106c6565b820191906000526020600020905b8154815290600101906020018083116106a957829003601f168201915b505050505081565b600081815261012d602052604090205460609061072d5760405162461bcd60e51b815260206004820152601c60248201527f4859444e5365616c3a20746f6b656e206e6f74206578697374696e6700000000604482015260640161051b565b6107368261121f565b61073f836112b3565b60405160200161075092919061281d565b6040516020818303038152906040529050919050565b6000610775629896804661287b565b6101615461078391906128b8565b905090565b60405162461bcd60e51b8152602060048201526024808201527f4859444e5365616c3a207472616e73666572206261746368206e6f7420616c6c60448201527f6f77656400000000000000000000000000000000000000000000000000000000606482015260840161051b565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036108a05760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161051b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109157f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161461099e5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161051b565b6109a7816113ed565b604080516000808252602082019092526109c3918391906113f5565b50565b60608151835114610a3f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161051b565b6000835167ffffffffffffffff811115610a5b57610a5b6121d0565b604051908082528060200260200182016040528015610a84578160200160208202803683370190505b50905060005b8451811015610afc57610acf858281518110610aa857610aa86128cb565b6020026020010151858381518110610ac257610ac26128cb565b6020026020010151610494565b828281518110610ae157610ae16128cb565b6020908102919091010152610af5816128fa565b9050610a8a565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610baf5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161051b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c247f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610cad5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161051b565b610cb6826113ed565b610cc2828260016113f5565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610d735760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161051b565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610da06115c5565b610daa600061162c565b565b610160805461064d906127ca565b610cc23383836116a3565b60405162461bcd60e51b815260206004820152601e60248201527f4859444e5365616c3a207472616e73666572206e6f7420616c6c6f7765640000604482015260640161051b565b610e156115c5565b73ffffffffffffffffffffffffffffffffffffffff8116610e9e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161051b565b6109c38161162c565b600054610100900460ff1615808015610ec75750600054600160ff909116105b80610ee15750303b158015610ee1575060005460ff166001145b610f535760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161051b565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610fb157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610fb96117dc565b610fc16117dc565b610fc9611859565b610fd2826118de565b610fda6117dc565b610fe7629896804661287b565b6101615560408051808201909152600981527f4859444e205365616c0000000000000000000000000000000000000000000000602082015261015f9061102d9082612980565b5060408051808201909152600381527fe29b9100000000000000000000000000000000000000000000000000000000006020820152610160906110709082612980565b508015610cc257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60006110e16115c5565b600161016160008282546110f59190612a9d565b90915550506101615460005b838110156112145761114f85858381811061111e5761111e6128cb565b9050602002016020810190611133919061244f565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b6111c05760405162461bcd60e51b8152602060048201526024808201527f4859444e5365616c3a207265636569766572206973206e6f74206120636f6e7460448201527f7261637400000000000000000000000000000000000000000000000000000000606482015260840161051b565b6112028585838181106111d5576111d56128cb565b90506020020160208101906111ea919061244f565b83600160405180602001604052806000815250611964565b8061120c816128fa565b915050611101565b506001949350505050565b606060fd805461122e906127ca565b80601f016020809104026020016040519081016040528092919081815260200182805461125a906127ca565b80156112a75780601f1061127c576101008083540402835291602001916112a7565b820191906000526020600020905b81548152906001019060200180831161128a57829003601f168201915b50505050509050919050565b6060816112f357505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561131d5780611307816128fa565b91506113169050600a83612adf565b91506112f7565b60008167ffffffffffffffff811115611338576113386121d0565b6040519080825280601f01601f191660200182016040528015611362576020820181803683370190505b5090505b84156113e5576113776001836128b8565b9150611384600a86612af3565b61138f906030612a9d565b60f81b8183815181106113a4576113a46128cb565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506113de600a86612adf565b9450611366565b949350505050565b6109c36115c5565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561142d5761142883611abe565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156114b2575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526114af91810190612b07565b60015b6115245760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f742055555053000000000000000000000000000000000000606482015260840161051b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146115b95760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c65555549440000000000000000000000000000000000000000000000606482015260840161051b565b50611428838383611bae565b60975473ffffffffffffffffffffffffffffffffffffffff163314610daa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b6097805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117445760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161051b565b73ffffffffffffffffffffffffffffffffffffffff838116600081815260fc602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600054610100900460ff16610daa5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161051b565b600054610100900460ff166118d65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161051b565b610daa611bd9565b600054610100900460ff1661195b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161051b565b6109c381611c5f565b73ffffffffffffffffffffffffffffffffffffffff84166119ed5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161051b565b3360006119f985611ce5565b90506000611a0685611ce5565b9050611a1783600089858589611d30565b600086815260fb6020908152604080832073ffffffffffffffffffffffffffffffffffffffff8b16845290915281208054879290611a56908490612a9d565b9091555050604080518781526020810187905273ffffffffffffffffffffffffffffffffffffffff808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff81163b611b485760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161051b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611bb783611d46565b600082511180611bc45750805b1561142857611bd38383611d93565b50505050565b600054610100900460ff16611c565760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161051b565b610daa3361162c565b600054610100900460ff16611cdc5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161051b565b6109c381611eb8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611d1f57611d1f6128cb565b602090810291909101015292915050565b611d3e868686868686611ec4565b505050505050565b611d4f81611abe565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606073ffffffffffffffffffffffffffffffffffffffff83163b611e1f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161051b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684604051611e479190612b20565b600060405180830381855af49150503d8060008114611e82576040519150601f19603f3d011682016040523d82523d6000602084013e611e87565b606091505b5091509150611eaf8282604051806060016040528060278152602001612b3d6027913961206f565b95945050505050565b60fd610cc28282612980565b73ffffffffffffffffffffffffffffffffffffffff8516611f595760005b8351811015611f5757828181518110611efd57611efd6128cb565b602002602001015161012d6000868481518110611f1c57611f1c6128cb565b602002602001015181526020019081526020016000206000828254611f419190612a9d565b90915550611f509050816128fa565b9050611ee2565b505b73ffffffffffffffffffffffffffffffffffffffff8416611d3e5760005b8351811015611ab5576000848281518110611f9457611f946128cb565b602002602001015190506000848381518110611fb257611fb26128cb565b60200260200101519050600061012d60008481526020019081526020016000205490508181101561204b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c79000000000000000000000000000000000000000000000000606482015260840161051b565b600092835261012d602052604090922091039055612068816128fa565b9050611f77565b6060831561207e5750816120a8565b82511561208e5782518084602001fd5b8160405162461bcd60e51b815260040161051b9190612166565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461055657600080fd5b600080604083850312156120e657600080fd5b6120f084846120af565b946020939093013593505050565b6000602082840312801561211157600080fd5b5081357fffffffff00000000000000000000000000000000000000000000000000000000811681146120a857600080fd5b60005b8381101561215d578181015183820152602001612145565b50506000910152565b6020815260008251806020840152612185816040850160208701612142565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156121c957600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612246576122466121d0565b604052919050565b600067ffffffffffffffff821115612268576122686121d0565b5060051b60200190565b600082601f83011215801561228657600080fd5b823567ffffffffffffffff8111156122a0576122a06121d0565b8060051b6122b0602082016121ff565b918252602081860181019290810190878411156122cc57600080fd5b6020870192505b838310156122f85784156122e5578485fd5b82358252602092830192909101906122d3565b979650505050505050565b600082601f83011215801561231757600080fd5b50813567ffffffffffffffff811115612332576123326121d0565b61236360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016121ff565b81815284602083860101111561237857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031280156123ae57600080fd5b506123b987876120af565b94506123c887602088016120af565b9350604086013567ffffffffffffffff8111156123e457600080fd5b6123f088828901612272565b935050606086013567ffffffffffffffff81111561240d57600080fd5b61241988828901612272565b925050608086013567ffffffffffffffff81111561243657600080fd5b61244288828901612303565b9150509295509295909350565b60006020828403121561246157600080fd5b6120a883836120af565b600080604083850312801561247f57600080fd5b50823567ffffffffffffffff81111561249757600080fd5b8301601f810185136124a857600080fd5b80356124bb6124b68261224e565b6121ff565b8082825260208201915060208360051b8501019250878311156124dd57600080fd5b6020840193505b82841015612507576124f688856120af565b8252602093840193909101906124e4565b9450505050602083013567ffffffffffffffff81111561252657600080fd5b61253285828601612272565b9150509250929050565b602080825282518282018190526000918401906040840190835b81811015612574578351835260209384019390920191600101612556565b509095945050505050565b600080604083850312801561259357600080fd5b5061259e84846120af565b9150602083013567ffffffffffffffff8111156125ba57600080fd5b61253285828601612303565b60008060408385031280156125da57600080fd5b506125e584846120af565b9150602083013580151581146125fa57600080fd5b809150509250929050565b6000806040838503121561261857600080fd5b61262284846120af565b915061263184602085016120af565b90509250929050565b600080600080600060a086880312801561265357600080fd5b5061265e87876120af565b945061266d87602088016120af565b93506040860135925060608601359150608086013567ffffffffffffffff81111561243657600080fd5b600060208284031280156126aa57600080fd5b50813567ffffffffffffffff8111156126c257600080fd5b8201601f810184136126d357600080fd5b803567ffffffffffffffff8111156126ed576126ed6121d0565b61271e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016121ff565b81815285602083850101111561273357600080fd5b81602084016020830137600091810160200191909152949350505050565b600080602083850312801561276557600080fd5b50823567ffffffffffffffff81111561277d57600080fd5b8301601f8101851361278e57600080fd5b803567ffffffffffffffff8111156127a557600080fd5b8560208260051b84010111156127ba57600080fd5b6020919091019590945092505050565b600181811c908216806127de57607f821691505b602082108103612817577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000835161282f818460208801612142565b835190830190612843818360208801612142565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156128b3576128b361284c565b500290565b818103818111156105565761055661284c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361292b5761292b61284c565b5060010190565b601f82111561142857806000526020600020601f840160051c810160208510156129595750805b601f840160051c820191505b818110156129795760008155600101612965565b5050505050565b815167ffffffffffffffff8111801561299b5761299b6121d0565b506129b0816129aa84546127ca565b84612932565b6020601f82118060018114612a0357600084156129cd5750858301515b8460011b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8660031b1c19821617865550611d3e565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612a515788860151825560209586019560019092019101612a31565b5085821015612a8d57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156105565761055661284c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612aee57612aee612ab0565b500490565b600082612b0257612b02612ab0565b500690565b600060208284031215612b1957600080fd5b5051919050565b60008251612b32818460208701612142565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c557a2cbc3a2e53d7774d484bd56d3115e51f65399baf2c92454ffb2fbeec7e064736f6c63430008100033";

type HYDNSealConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HYDNSealConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HYDNSeal__factory extends ContractFactory {
  constructor(...args: HYDNSealConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HYDNSeal> {
    return super.deploy(overrides || {}) as Promise<HYDNSeal>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HYDNSeal {
    return super.attach(address) as HYDNSeal;
  }
  override connect(signer: Signer): HYDNSeal__factory {
    return super.connect(signer) as HYDNSeal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HYDNSealInterface {
    return new utils.Interface(_abi) as HYDNSealInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HYDNSeal {
    return new Contract(address, _abi, signerOrProvider) as HYDNSeal;
  }
}
