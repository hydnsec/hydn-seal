/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type { PromiseOrValue } from "../../common";
import type { HYDNSeal, HYDNSealInterface } from "../../contracts/HYDNSeal";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_contracts",
        type: "address[]",
      },
    ],
    name: "mintSeal",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAudits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e8565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e6576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051612b9062000120600039600081816107ca0152818161086001528181610ad901528181610b6f0152610c9e0152612b906000f3fe6080604052600436106101695760003560e01c806352d1902d116100cb578063bd85b0391161007f578063f2fde38b11610059578063f2fde38b14610414578063f62d188814610434578063f722c17d1461045457600080fd5b8063bd85b03914610370578063e985e9c51461039e578063f242432a146103f457600080fd5b80638da5cb5b116100b05780638da5cb5b1461030657806395d89b411461033b578063a22cb4651461035057600080fd5b806352d1902d146102dc578063715018a6146102f157600080fd5b80633659cfe6116101225780634e1273f4116101075780634e1273f41461026c5780634f1ef286146102995780634f558e79146102ac57600080fd5b80633659cfe6146102355780634a07147f1461025557600080fd5b806306fdde031161015357806306fdde03146101d15780630e89341c146101f35780632eb2c2d61461021357600080fd5b8062fdd58e1461016e57806301ffc9a7146101a1575b600080fd5b34801561017a57600080fd5b5061018e61018936600461209a565b610474565b6040519081526020015b60405180910390f35b3480156101ad57600080fd5b506101c16101bc3660046120c5565b61053c565b6040519015158152602001610198565b3480156101dd57600080fd5b506101e661061f565b6040516101989190612135565b3480156101ff57600080fd5b506101e661020e366004612186565b6106ae565b34801561021f57600080fd5b5061023361022e366004612364565b610746565b005b34801561024157600080fd5b5061023361025036600461241e565b6107b3565b34801561026157600080fd5b5061018e6101615481565b34801561027857600080fd5b5061028c61028736600461243a565b610984565b604051610198919061250b565b6102336102a736600461254e565b610ac2565b3480156102b857600080fd5b506101c16102c7366004612186565b600090815261012d6020526040902054151590565b3480156102e857600080fd5b5061018e610c84565b3480156102fd57600080fd5b50610233610d56565b34801561031257600080fd5b5060975460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610198565b34801561034757600080fd5b506101e6610d6a565b34801561035c57600080fd5b5061023361036b366004612595565b610d78565b34801561037c57600080fd5b5061018e61038b366004612186565b600090815261012d602052604090205490565b3480156103aa57600080fd5b506101c16103b93660046125d4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260fc6020908152604080832093909416825291909152205460ff1690565b34801561040057600080fd5b5061023361040f366004612609565b610d83565b34801561042057600080fd5b5061023361042f36600461241e565b610dcb565b34801561044057600080fd5b5061023361044f366004612666565b610e65565b34801561046057600080fd5b506101c161046f366004612720565b611095565b600073ffffffffffffffffffffffffffffffffffffffff83166105045760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b50600081815260fb6020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806105cf57507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061053657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610536565b61015f805461062d90612799565b80601f016020809104026020016040519081016040528092919081815260200182805461065990612799565b80156106a65780601f1061067b576101008083540402835291602001916106a6565b820191906000526020600020905b81548152906001019060200180831161068957829003601f168201915b505050505081565b600081815261012d602052604090205460609061070d5760405162461bcd60e51b815260206004820152601c60248201527f4859444e5365616c3a20746f6b656e206e6f74206578697374696e670000000060448201526064016104fb565b610716826111e6565b61071f8361127a565b6040516020016107309291906127ec565b6040516020818303038152906040529050919050565b60405162461bcd60e51b8152602060048201526024808201527f4859444e5365616c3a207472616e73666572206261746368206e6f7420616c6c60448201527f6f7765640000000000000000000000000000000000000000000000000000000060648201526084016104fb565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361085e5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016104fb565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108d37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161461095c5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016104fb565b610965816113b4565b60408051600080825260208201909252610981918391906113bc565b50565b606081518351146109fd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016104fb565b6000835167ffffffffffffffff811115610a1957610a1961219f565b604051908082528060200260200182016040528015610a42578160200160208202803683370190505b50905060005b8451811015610aba57610a8d858281518110610a6657610a6661281b565b6020026020010151858381518110610a8057610a8061281b565b6020026020010151610474565b828281518110610a9f57610a9f61281b565b6020908102919091010152610ab381612879565b9050610a48565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610b6d5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016104fb565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610be27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610c6b5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016104fb565b610c74826113b4565b610c80828260016113bc565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610d315760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104fb565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610d5e61158c565b610d6860006115f3565b565b610160805461062d90612799565b610c8033838361166a565b60405162461bcd60e51b815260206004820152601e60248201527f4859444e5365616c3a207472616e73666572206e6f7420616c6c6f776564000060448201526064016104fb565b610dd361158c565b73ffffffffffffffffffffffffffffffffffffffff8116610e5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104fb565b610981816115f3565b600054610100900460ff1615808015610e855750600054600160ff909116105b80610e9f5750303b158015610e9f575060005460ff166001145b610f115760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104fb565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610f6f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610f776117a3565b610f7f6117a3565b610f87611820565b610f90826118a5565b610f986117a3565b610fa562989680466128b1565b6101615560408051808201909152600981527f4859444e205365616c0000000000000000000000000000000000000000000000602082015261015f90610feb908261293c565b5060408051808201909152600381527fe29b91000000000000000000000000000000000000000000000000000000000060208201526101609061102e908261293c565b508015610c8057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b600061109f61158c565b600161016160008282546110b39190612a59565b90915550506101615460005b60ff81168411156111db5761111385858360ff168181106110e2576110e261281b565b90506020020160208101906110f7919061241e565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b6111845760405162461bcd60e51b8152602060048201526024808201527f4859444e5365616c3a207265636569766572206973206e6f74206120636f6e7460448201527f726163740000000000000000000000000000000000000000000000000000000060648201526084016104fb565b6111c985858360ff1681811061119c5761119c61281b565b90506020020160208101906111b1919061241e565b8360016040518060200160405280600081525061192b565b806111d381612a71565b9150506110bf565b506001949350505050565b606060fd80546111f590612799565b80601f016020809104026020016040519081016040528092919081815260200182805461122190612799565b801561126e5780601f106112435761010080835404028352916020019161126e565b820191906000526020600020905b81548152906001019060200180831161125157829003601f168201915b50505050509050919050565b6060816112ba57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156112e457806112ce81612879565b91506112dd9050600a83612abf565b91506112be565b60008167ffffffffffffffff8111156112ff576112ff61219f565b6040519080825280601f01601f191660200182016040528015611329576020820181803683370190505b5090505b84156113ac5761133e600183612ad3565b915061134b600a86612aea565b611356906030612a59565b60f81b81838151811061136b5761136b61281b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506113a5600a86612abf565b945061132d565b949350505050565b61098161158c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156113f4576113ef83611a85565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611479575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261147691810190612afe565b60015b6114eb5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016104fb565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146115805760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016104fb565b506113ef838383611b75565b60975473ffffffffffffffffffffffffffffffffffffffff163314610d685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104fb565b6097805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361170b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016104fb565b73ffffffffffffffffffffffffffffffffffffffff838116600081815260fc602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600054610100900460ff16610d685760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104fb565b600054610100900460ff1661189d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104fb565b610d68611ba0565b600054610100900460ff166119225760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104fb565b61098181611c26565b73ffffffffffffffffffffffffffffffffffffffff84166119b45760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104fb565b3360006119c085611cac565b905060006119cd85611cac565b90506119de83600089858589611cf7565b600086815260fb6020908152604080832073ffffffffffffffffffffffffffffffffffffffff8b16845290915281208054879290611a1d908490612a59565b9091555050604080518781526020810187905273ffffffffffffffffffffffffffffffffffffffff808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff81163b611b0f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016104fb565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611b7e83611d0d565b600082511180611b8b5750805b156113ef57611b9a8383611d5a565b50505050565b600054610100900460ff16611c1d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104fb565b610d68336115f3565b600054610100900460ff16611ca35760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104fb565b61098181611e7f565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611ce657611ce661281b565b602090810291909101015292915050565b611d05868686868686611e8b565b505050505050565b611d1681611a85565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606073ffffffffffffffffffffffffffffffffffffffff83163b611de65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016104fb565b6000808473ffffffffffffffffffffffffffffffffffffffff1684604051611e0e9190612b17565b600060405180830381855af49150503d8060008114611e49576040519150601f19603f3d011682016040523d82523d6000602084013e611e4e565b606091505b5091509150611e768282604051806060016040528060278152602001612b3460279139612036565b95945050505050565b60fd610c80828261293c565b73ffffffffffffffffffffffffffffffffffffffff8516611f205760005b8351811015611f1e57828181518110611ec457611ec461281b565b602002602001015161012d6000868481518110611ee357611ee361281b565b602002602001015181526020019081526020016000206000828254611f089190612a59565b90915550611f17905081612879565b9050611ea9565b505b73ffffffffffffffffffffffffffffffffffffffff8416611d055760005b8351811015611a7c576000848281518110611f5b57611f5b61281b565b602002602001015190506000848381518110611f7957611f7961281b565b60200260200101519050600061012d6000848152602001908152602001600020549050818110156120125760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c7900000000000000000000000000000000000000000000000060648201526084016104fb565b600092835261012d60205260409092209103905561202f81612879565b9050611f3e565b6060831561204557508161206f565b8251156120555782518084602001fd5b8160405162461bcd60e51b81526004016104fb9190612135565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461053657600080fd5b600080604083850312156120ad57600080fd5b6120b78484612076565b946020939093013593505050565b600060208284031280156120d857600080fd5b5081357fffffffff000000000000000000000000000000000000000000000000000000008116811461206f57600080fd5b60005b8381101561212457818101518382015260200161210c565b83811115611b9a5750506000910152565b6020815260008251806020840152612154816040850160208701612109565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121561219857600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156122155761221561219f565b604052919050565b600067ffffffffffffffff8211156122375761223761219f565b5060051b60200190565b600082601f83011215801561225557600080fd5b823567ffffffffffffffff81111561226f5761226f61219f565b8060051b61227f602082016121ce565b9182526020818601810192908101908784111561229b57600080fd5b6020870192505b838310156122c75784156122b4578485fd5b82358252602092830192909101906122a2565b979650505050505050565b600082601f8301121580156122e657600080fd5b50813567ffffffffffffffff8111156123015761230161219f565b61233260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016121ce565b81815284602083860101111561234757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312801561237d57600080fd5b506123888787612076565b94506123978760208801612076565b9350604086013567ffffffffffffffff8111156123b357600080fd5b6123bf88828901612241565b935050606086013567ffffffffffffffff8111156123dc57600080fd5b6123e888828901612241565b925050608086013567ffffffffffffffff81111561240557600080fd5b612411888289016122d2565b9150509295509295909350565b60006020828403121561243057600080fd5b61206f8383612076565b600080604083850312801561244e57600080fd5b50823567ffffffffffffffff81111561246657600080fd5b8301601f8101851361247757600080fd5b803561248a6124858261221d565b6121ce565b8082825260208201915060208360051b8501019250878311156124ac57600080fd5b6020840193505b828410156124d6576124c58885612076565b8252602093840193909101906124b3565b9450505050602083013567ffffffffffffffff8111156124f557600080fd5b61250185828601612241565b9150509250929050565b602080825282518282018190526000918401906040840190835b81811015612543578351835260209384019390920191600101612525565b509095945050505050565b600080604083850312801561256257600080fd5b5061256d8484612076565b9150602083013567ffffffffffffffff81111561258957600080fd5b612501858286016122d2565b60008060408385031280156125a957600080fd5b506125b48484612076565b9150602083013580151581146125c957600080fd5b809150509250929050565b600080604083850312156125e757600080fd5b6125f18484612076565b91506126008460208501612076565b90509250929050565b600080600080600060a086880312801561262257600080fd5b5061262d8787612076565b945061263c8760208801612076565b93506040860135925060608601359150608086013567ffffffffffffffff81111561240557600080fd5b6000602082840312801561267957600080fd5b50813567ffffffffffffffff81111561269157600080fd5b8201601f810184136126a257600080fd5b803567ffffffffffffffff8111156126bc576126bc61219f565b6126ed60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016121ce565b81815285602083850101111561270257600080fd5b81602084016020830137600091810160200191909152949350505050565b600080602083850312801561273457600080fd5b50823567ffffffffffffffff81111561274c57600080fd5b8301601f8101851361275d57600080fd5b803567ffffffffffffffff81111561277457600080fd5b8560208260051b840101111561278957600080fd5b6020919091019590945092505050565b600181811c908216806127ad57607f821691505b6020821081036127e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600083516127fe818460208801612109565b835190830190612812818360208801612109565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128aa576128aa61284a565b5060010190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156128e9576128e961284a565b500290565b601f8211156113ef57806000526020600020601f840160051c810160208510156129155750805b601f840160051c820191505b818110156129355760008155600101612921565b5050505050565b815167ffffffffffffffff811180156129575761295761219f565b5061296c816129668454612799565b846128ee565b6020601f821180600181146129bf57600084156129895750858301515b8460011b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8660031b1c19821617865550611d05565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612a0d57888601518255602095860195600190920191016129ed565b5085821015612a4957878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60008219821115612a6c57612a6c61284a565b500190565b600060ff821660ff8103612a8757612a8761284a565b60010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612ace57612ace612a90565b500490565b600082821015612ae557612ae561284a565b500390565b600082612af957612af9612a90565b500690565b600060208284031215612b1057600080fd5b5051919050565b60008251612b29818460208701612109565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c145a73780f22e0a1c649a02e82046f37706af632869823a9668eedebdcaf12464736f6c634300080f0033";

type HYDNSealConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HYDNSealConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HYDNSeal__factory extends ContractFactory {
  constructor(...args: HYDNSealConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HYDNSeal> {
    return super.deploy(overrides || {}) as Promise<HYDNSeal>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HYDNSeal {
    return super.attach(address) as HYDNSeal;
  }
  override connect(signer: Signer): HYDNSeal__factory {
    return super.connect(signer) as HYDNSeal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HYDNSealInterface {
    return new utils.Interface(_abi) as HYDNSealInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HYDNSeal {
    return new Contract(address, _abi, signerOrProvider) as HYDNSeal;
  }
}
