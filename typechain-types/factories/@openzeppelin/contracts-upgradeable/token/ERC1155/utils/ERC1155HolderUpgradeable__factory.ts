/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type {
  ERC1155HolderUpgradeable,
  ERC1155HolderUpgradeableInterface,
} from "../../../../../../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable";
import type { PromiseOrValue } from "../../../../../../common";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610505806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100d7575b600080fd5b6100596100543660046101a8565b61010f565b60405190151581526020015b60405180910390f35b6100a661007c3660046103b8565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610065565b6100a66100e5366004610472565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e00000000000000000000000000000000000000000000000000000000014806101a257507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600060208284031280156101bb57600080fd5b5081357fffffffff00000000000000000000000000000000000000000000000000000000811681146101ec57600080fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146101a257600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561028d5761028d610217565b604052919050565b600082601f8301121580156102a957600080fd5b823567ffffffffffffffff8111156102c3576102c3610217565b8060051b6102d360208201610246565b918252602081860181019290810190878411156102ef57600080fd5b6020870192505b8383101561031b578415610308578485fd5b82358252602092830192909101906102f6565b979650505050505050565b600082601f83011215801561033a57600080fd5b50813567ffffffffffffffff81111561035557610355610217565b61038660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610246565b81815284602083860101111561039b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031280156103d157600080fd5b506103dc87876101f3565b94506103eb87602088016101f3565b9350604086013567ffffffffffffffff81111561040757600080fd5b61041388828901610295565b935050606086013567ffffffffffffffff81111561043057600080fd5b61043c88828901610295565b925050608086013567ffffffffffffffff81111561045957600080fd5b61046588828901610326565b9150509295509295909350565b600080600080600060a086880312801561048b57600080fd5b5061049687876101f3565b94506104a587602088016101f3565b93506040860135925060608601359150608086013567ffffffffffffffff81111561045957600080fdfea26469706673582212204aef4918b7f11c92496c1e5f48d932c460cc13d603589737e394a713b3cb6e9264736f6c634300080f0033";

type ERC1155HolderUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155HolderUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155HolderUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC1155HolderUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155HolderUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC1155HolderUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155HolderUpgradeable {
    return super.attach(address) as ERC1155HolderUpgradeable;
  }
  override connect(signer: Signer): ERC1155HolderUpgradeable__factory {
    return super.connect(signer) as ERC1155HolderUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155HolderUpgradeableInterface {
    return new utils.Interface(_abi) as ERC1155HolderUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155HolderUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155HolderUpgradeable;
  }
}
